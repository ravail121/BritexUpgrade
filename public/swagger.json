{
  "swagger" : "2.0",
  "info" : {
    "description" : "BriteX API DOCS.",
    "version" : "1.0.0",
    "title" : "BriteX Dev"
  },
  "host" : "britex.pw",
  "basePath" : "/api",
  "tags" : [ {
    "name" : "order",
    "description" : "Orders API"
  }, {
    "name" : "ordergroup",
    "description" : "OrderGroups API"
  }, {
    "name" : "plan",
    "description" : "Plans API"
  }, {
    "name" : "porting",
    "description" : "Porting API"
  } ],
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "APIKey" : [ ]
  } ],
  "paths" : {
    "/order" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Get orders based on query",
        "operationId" : "getOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "order_hash",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Order"
              }
            }
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      },
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Add or update order",
        "operationId" : "postOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Order Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/order/remove" : {
      "patch" : {
        "tags" : [ "order" ],
        "summary" : "remove order",
        "operationId" : "removeOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "removeOrder Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RemoveOrderPatch"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/order-group" : {
      "put" : {
        "tags" : [ "ordergroup" ],
        "summary" : "update(close/open) ordergroup",
        "operationId" : "putOrderGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "OrderGroup Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderGroupPut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/plans" : {
      "get" : {
        "tags" : [ "plan" ],
        "summary" : "Get plans",
        "description" : "",
        "operationId" : "getPlan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "device_id",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Plan"
              }
            }
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/plans/check-area-code" : {
      "get" : {
        "tags" : [ "plan" ],
        "summary" : "Check area code",
        "description" : "",
        "operationId" : "checkAreaCodePlan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "order_hash",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "plan_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/sims" : {
      "get" : {
        "tags" : [ "sim" ],
        "summary" : "getSim",
        "description" : "gets the sim ",
        "operationId" : "getSim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "plan_id",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Sim"
              }
            }
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/addons" : {
      "get" : {
        "tags" : [ "addon" ],
        "summary" : "getAddon",
        "description" : "gets the addon",
        "operationId" : "getAddon",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "plan_id",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "addons",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Addon"
              }
            }
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/devices" : {
      "get" : {
        "tags" : [ "device" ],
        "summary" : "getDevice",
        "description" : "gets the device index",
        "operationId" : "getDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "carrier_id",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Device"
              }
            }
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/porting/check" : {
      "get" : {
        "tags" : [ "porting" ],
        "summary" : "check porting status",
        "description" : "check porting status",
        "operationId" : "checkPorting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "order_hash",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plan_id",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status "
          }
        }
      }
    },
    "/create-customer" : {
      "post" : {
        "tags" : [ "create customer" ],
        "summary" : "Add or update customer",
        "operationId" : "postCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Customer Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/biz-verification" : {
      "post" : {
        "tags" : [ "business verification" ],
        "summary" : "Verify Business",
        "operationId" : "postBizVerification",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "BizVerification Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BizVerificationPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/biz-verification/resend-email" : {
      "post" : {
        "tags" : [ "business verification" ],
        "summary" : "Resends Email",
        "operationId" : "resendEmail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "BizVerification Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResendEmail"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/default-imei" : {
      "get" : {
        "tags" : [ "default imei" ],
        "summary" : "Get Default IMEI",
        "description" : "gets default IMEI number of device",
        "operationId" : "defaultImei",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "plan_type",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/charge-new-card" : {
      "post" : {
        "tags" : [ "customer payment" ],
        "summary" : "Payment through card",
        "operationId" : "customerPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "CustomerPayment Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/customer-cards" : {
      "get" : {
        "tags" : [ "customer credit cards" ],
        "summary" : "Get all Customer Cards",
        "description" : "gets all customer cards",
        "operationId" : "customerCards",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customer_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/add-card" : {
      "post" : {
        "tags" : [ "customer credit cards" ],
        "summary" : "Adds card",
        "operationId" : "addCard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "AddCard Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/charge-card" : {
      "post" : {
        "tags" : [ "customer credit cards" ],
        "summary" : "Charges from existing card",
        "operationId" : "chargeCard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "chargeCard Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChargeCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/create-subscription" : {
      "post" : {
        "tags" : [ "subscription" ],
        "summary" : "create subscription",
        "operationId" : "postSubscription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Customer Object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/create-subscription-addon" : {
      "post" : {
        "tags" : [ "subscription" ],
        "summary" : "create subscription addons",
        "operationId" : "postSubscriptionAddon",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "subscription Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionAddonPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/sign-on" : {
      "post" : {
        "tags" : [ "signon customer" ],
        "summary" : "Sign In customer",
        "operationId" : "signonCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "SignOn Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Signon"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/customer" : {
      "get" : {
        "tags" : [ "customer details" ],
        "summary" : "Fetch customer's Details",
        "description" : "gets all customer details",
        "operationId" : "customerDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hash",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/remove-card" : {
      "post" : {
        "tags" : [ "remove card" ],
        "summary" : "Delete cradit cards",
        "operationId" : "removeCard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "RemoveCard Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RemoveCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/primary-card" : {
      "post" : {
        "tags" : [ "Primary card" ],
        "summary" : "Set selected cradit cards as primary & set rest of card as non primary",
        "operationId" : "primaryCard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "PrimaryCard Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrimaryCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/update-customer" : {
      "post" : {
        "tags" : [ "Updates customer" ],
        "summary" : "Update customer Details",
        "operationId" : "UpdateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "UpdateCustomer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateCustomer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/customer-subscriptions" : {
      "get" : {
        "tags" : [ "customer invoice & plan details" ],
        "summary" : "Fetch customer's Plans & Bills",
        "description" : "Gets customer Plan & Bills",
        "operationId" : "customerSubscriptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hash",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/customer-current-invoice" : {
      "get" : {
        "tags" : [ "customer invoice details" ],
        "summary" : "Fetch customer's Bills",
        "description" : "Gets customer Bills",
        "operationId" : "customerInvoice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hash",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/customer-orders" : {
      "get" : {
        "tags" : [ "customer order & invoice details" ],
        "summary" : "Gets past orders and BILLs of customer",
        "description" : "Gets past orders and BILLs of customer",
        "operationId" : "customerOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hash",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/create-device-record" : {
      "post" : {
        "tags" : [ "customer standalone device" ],
        "summary" : "Adds customer standalone device record",
        "operationId" : "postStandaloneDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Standalone Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StandaloneDevicePost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/create-sim-record" : {
      "post" : {
        "tags" : [ "customer standalone sim" ],
        "summary" : "Adds customer standalone sim record",
        "operationId" : "postStandaloneSim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Standalone Object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StandaloneSimPost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : ""
          },
          "403" : {
            "description" : "Invalid API Key"
          }
        }
      }
    },
    "/forgot-password" : {
      "get" : {
        "tags" : [ "forgot password" ],
        "summary" : "sends reset password link to user in form of email",
        "description" : "sends reset password link to user in form of email",
        "operationId" : "forgotPassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    },
    "/reset-password" : {
      "get" : {
        "tags" : [ "reset password" ],
        "summary" : "reset new password",
        "description" : "reset new password",
        "operationId" : "resetPassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "description" : "Invalid status"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "APIKey" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "OrderPost" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        },
        "device_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plan_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sim_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sim_num" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sim_type" : {
          "type" : "string"
        },
        "addon_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "subscription_id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CustomerPost" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        },
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "company_name" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "alternate_phone" : {
          "type" : "string",
          "description" : "It can be null"
        },
        "password" : {
          "type" : "string"
        },
        "shipping_address1" : {
          "type" : "string"
        },
        "shipping_address2" : {
          "type" : "string",
          "description" : "It can be null"
        },
        "shipping_city" : {
          "type" : "string"
        },
        "shipping_state_id" : {
          "type" : "string"
        },
        "shipping_zip" : {
          "type" : "integer",
          "maximum" : 5
        },
        "pin" : {
          "type" : "integer",
          "maximum" : 4
        },
        "auto_pay" : {
          "type" : "integer"
        }
      }
    },
    "SubscriptionPost" : {
      "type" : "object",
      "properties" : {
        "api_key" : {
          "type" : "string",
          "description" : "This field is required"
        },
        "order_id" : {
          "type" : "integer",
          "description" : "This field is required"
        },
        "device_id" : {
          "type" : "integer"
        },
        "plan_id" : {
          "type" : "integer"
        },
        "sim_id" : {
          "type" : "integer"
        },
        "sim_num" : {
          "type" : "string"
        },
        "sim_type" : {
          "type" : "string"
        },
        "porting_number" : {
          "type" : "string"
        },
        "area_code" : {
          "type" : "string"
        },
        "operating_system" : {
          "type" : "string"
        },
        "imei_number" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAddonPost" : {
      "type" : "object",
      "properties" : {
        "api_key" : {
          "type" : "string"
        },
        "order_id" : {
          "type" : "integer"
        },
        "subscription_id" : {
          "type" : "integer"
        },
        "addon_id" : {
          "type" : "integer"
        }
      }
    },
    "StandaloneDevicePost" : {
      "type" : "object",
      "properties" : {
        "api_key" : {
          "type" : "string"
        },
        "customer_id" : {
          "type" : "integer"
        },
        "order_id" : {
          "type" : "integer"
        },
        "device_id" : {
          "type" : "integer"
        },
        "imei" : {
          "type" : "string"
        }
      }
    },
    "StandaloneSimPost" : {
      "type" : "object",
      "properties" : {
        "api_key" : {
          "type" : "string"
        },
        "customer_id" : {
          "type" : "integer"
        },
        "order_id" : {
          "type" : "integer"
        },
        "sim_id" : {
          "type" : "integer"
        },
        "sim_num" : {
          "type" : "string"
        }
      }
    },
    "BizVerificationPost" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        },
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "business_name" : {
          "type" : "string"
        },
        "tax_id" : {
          "type" : "integer"
        },
        "doc_file" : {
          "type" : "string"
        }
      }
    },
    "ResendEmail" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        }
      }
    },
    "CustomerPayment" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "usesandbox" : {
          "type" : "boolean"
        },
        "invoice" : {
          "type" : "boolean"
        },
        "card" : {
          "type" : "number"
        },
        "exp" : {
          "type" : "number"
        },
        "cvv2" : {
          "type" : "integer"
        },
        "amount" : {
          "type" : "number"
        },
        "cardholder" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "number"
        },
        "isrecurring" : {
          "type" : "boolean"
        },
        "savecard" : {
          "type" : "boolean"
        },
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "billcompany" : {
          "type" : "string"
        },
        "billstreet" : {
          "type" : "string"
        },
        "billcity" : {
          "type" : "string"
        },
        "billstate" : {
          "type" : "string"
        },
        "billzip" : {
          "type" : "integer",
          "maximum" : 5
        },
        "billcountry" : {
          "type" : "string"
        },
        "billphone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "AddCard" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "usesandbox" : {
          "type" : "boolean"
        },
        "invoice" : {
          "type" : "boolean"
        },
        "card" : {
          "type" : "number"
        },
        "exp" : {
          "type" : "number"
        },
        "cvv2" : {
          "type" : "integer"
        },
        "amount" : {
          "type" : "number",
          "description" : "Amount will be 1.00 in this case"
        },
        "cardholder" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "number"
        },
        "isrecurring" : {
          "type" : "boolean"
        },
        "savecard" : {
          "type" : "boolean"
        },
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "billcompany" : {
          "type" : "string"
        },
        "billstreet" : {
          "type" : "string"
        },
        "billcity" : {
          "type" : "string"
        },
        "billstate" : {
          "type" : "string"
        },
        "billzip" : {
          "type" : "integer",
          "maximum" : 5
        },
        "billcountry" : {
          "type" : "string"
        },
        "billphone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "ChargeCard" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "usesandbox" : {
          "type" : "boolean"
        },
        "invoice" : {
          "type" : "boolean"
        },
        "card" : {
          "type" : "number"
        },
        "exp" : {
          "type" : "number"
        },
        "cvv2" : {
          "type" : "integer"
        },
        "amount" : {
          "type" : "number"
        },
        "cardholder" : {
          "type" : "string"
        },
        "street" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "number"
        },
        "isrecurring" : {
          "type" : "boolean"
        },
        "savecard" : {
          "type" : "boolean"
        },
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "billcompany" : {
          "type" : "string"
        },
        "billstreet" : {
          "type" : "string"
        },
        "billcity" : {
          "type" : "string"
        },
        "billstate" : {
          "type" : "string"
        },
        "billzip" : {
          "type" : "integer",
          "maximum" : 5
        },
        "billcountry" : {
          "type" : "string"
        },
        "billphone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "Order" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "orderId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Order Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "RemoveOrderPatch" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        },
        "order_group_id" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "OrderGroupPut" : {
      "type" : "object",
      "properties" : {
        "order_hash" : {
          "type" : "string"
        },
        "action" : {
          "type" : "integer",
          "format" : "int32"
        },
        "order_group_id" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "Plan" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "planId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Plan Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Plan"
      }
    },
    "Sim" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "simId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Sim Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Sim"
      }
    },
    "Addon" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "orderId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Addon Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Addon"
      }
    },
    "Device" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deviceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shipDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "description" : "Device Status",
          "enum" : [ "placed", "approved", "delivered" ]
        },
        "complete" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "Device"
      }
    },
    "Signon" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "customer_id" : {
          "type" : "integer"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "RemoveCard" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Card Id"
        }
      }
    },
    "PrimaryCard" : {
      "type" : "object",
      "properties" : {
        "cardId" : {
          "type" : "integer",
          "description" : "Card Id"
        },
        "id" : {
          "type" : "integer",
          "description" : "Customer Id"
        }
      }
    },
    "UpdateCustomer" : {
      "type" : "object",
      "properties" : {
        "fname" : {
          "type" : "string"
        },
        "lname" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "billing_address1" : {
          "type" : "string"
        },
        "billing_city" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "shipping_address1" : {
          "type" : "string"
        },
        "shipping_city" : {
          "type" : "string"
        },
        "shipping_zip" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "integer"
        },
        "pin" : {
          "type" : "integer"
        },
        "auto_pay" : {
          "type" : "integer"
        },
        "old_password" : {
          "type" : "string"
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}